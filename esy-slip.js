// esy-slip.js
const axios = require('axios');

class ESYSlipService {
    constructor(apiKey) {
        this.apiKey = apiKey;
        // ‡πÅ‡∏Å‡πâ URL ‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£
        this.apiUrl = 'https://developer.easyslip.com/api/v1/verify';
    }

    async verifySlip(slipData) {
        try {
            console.log('üîç Verifying slip with ESY API...');
            
            // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏ï‡∏≤‡∏°‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
            const response = await axios.post(this.apiUrl, {
                image: slipData  // ‡∏™‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô image ‡πÅ‡∏ó‡∏ô data
            }, {
                headers: {
                    'Authorization': `Bearer ${this.apiKey}`,  // ‡πÉ‡∏ä‡πâ Bearer token
                    'Content-Type': 'application/json'
                }
            });

            console.log('üìã ESY Response:', response.data);
            
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ï‡∏≤‡∏° response structure ‡∏à‡∏£‡∏¥‡∏á
            if (response.data && response.data.data) {
                const data = response.data.data;
                
                return {
                    success: true,
                    amount: parseFloat(data.amount) || 0,
                    transactionRef: data.transRef || data.transactionId || data.ref,
                    sender: data.sender?.displayName || data.sender?.name || 'Unknown',
                    receiver: data.receiver?.displayName || data.receiver?.name || 'Unknown',
                    date: data.date,
                    time: data.time,
                    rawData: response.data
                };
            } else {
                return {
                    success: false,
                    error: response.data?.message || 'Verification failed'
                };
            }
            
        } catch (error) {
            console.error('‚ùå ESY Slip Error:', error.message);
            
            // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô axios error ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°
            if (error.response) {
                console.error('Response status:', error.response.status);
                console.error('Response data:', error.response.data);
                
                return {
                    success: false,
                    error: error.response.data?.message || `API Error: ${error.response.status}`
                };
            }
            
            return {
                success: false,
                error: error.message
            };
        }
    }

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡∏°‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    validateReceiver(slipData, expectedReceiver) {
        // ‡∏•‡∏ö‡∏Ç‡∏µ‡∏î‡πÅ‡∏•‡∏∞‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏≠‡∏≠‡∏Å
        const cleanReceiver = (slipData.receiver || '').replace(/-|\s/g, '');
        const cleanExpected = expectedReceiver.replace(/-|\s/g, '');
        
        return cleanReceiver === cleanExpected;
    }
}

module.exports = ESYSlipService;