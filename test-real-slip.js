// test-real-slip.js
// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö ESY Slip API ‡∏î‡πâ‡∏ß‡∏¢‡∏™‡∏•‡∏¥‡∏õ‡∏à‡∏£‡∏¥‡∏á

require('dotenv').config();
const fs = require('fs');
const path = require('path');
const ESYSlipService = require('./esy-slip');

// Initialize ESY Slip service
const esySlip = new ESYSlipService(process.env.ESY_SLIP_API_KEY);

async function testRealSlip() {
    console.log('üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö ESY Slip API ‡∏î‡πâ‡∏ß‡∏¢‡∏™‡∏•‡∏¥‡∏õ‡∏à‡∏£‡∏¥‡∏á...\n');
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö API Key
    if (!process.env.ESY_SLIP_API_KEY) {
        console.error('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö ESY_SLIP_API_KEY');
        return;
    }
    
    // ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏•‡∏¥‡∏õ (‡∏ß‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå slip.jpg ‡∏´‡∏£‡∏∑‡∏≠ slip.png ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô)
    const slipPath = path.join(__dirname, 'slip.jpg'); // ‡∏´‡∏£‡∏∑‡∏≠ slip.png
    
    if (!fs.existsSync(slipPath)) {
        console.error('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏•‡∏¥‡∏õ');
        console.log('üìå ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ:');
        console.log('1. ‡∏ß‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏•‡∏¥‡∏õ‡∏ä‡∏∑‡πà‡∏≠ slip.jpg ‡∏´‡∏£‡∏∑‡∏≠ slip.png ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ');
        console.log('2. ‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: node test-real-slip.js');
        return;
    }
    
    try {
        // ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏•‡∏∞‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô base64
        const slipBuffer = fs.readFileSync(slipPath);
        const slipBase64 = slipBuffer.toString('base64');
        const mimeType = slipPath.endsWith('.png') ? 'image/png' : 'image/jpeg';
        const slipData = `data:${mimeType};base64,${slipBase64}`;
        
        console.log('üìÑ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏ü‡∏•‡πå:');
        console.log('- ‡∏Ç‡∏ô‡∏≤‡∏î:', (slipBuffer.length / 1024).toFixed(2), 'KB');
        console.log('- ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó:', mimeType);
        console.log('- Base64 length:', slipData.length);
        
        console.log('\nüîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö...\n');
        
        // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API
        const result = await esySlip.verifySlip(slipData);
        
        console.log('üìä ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö:');
        console.log(JSON.stringify(result, null, 2));
        
        if (result.success) {
            console.log('\n‚úÖ ‡∏≠‡πà‡∏≤‡∏ô‡∏™‡∏•‡∏¥‡∏õ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
            console.log('üí∞ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô:', result.amount, '‡∏ö‡∏≤‡∏ó');
            console.log('üì± ‡πÄ‡∏•‡∏Ç‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á:', result.transactionRef);
            console.log('üë§ ‡∏ú‡∏π‡πâ‡πÇ‡∏≠‡∏ô:', result.sender);
            console.log('üë§ ‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö:', result.receiver);
            
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö raw data
            if (result.rawData && result.rawData.data) {
                console.log('\nüìã Raw Data Keys:', Object.keys(result.rawData.data));
                console.log('Raw Data:', JSON.stringify(result.rawData.data, null, 2));
            }
        } else {
            console.log('\n‚ùå ‡∏≠‡πà‡∏≤‡∏ô‡∏™‡∏•‡∏¥‡∏õ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
            console.log('Error:', result.error);
        }
        
    } catch (error) {
        console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error.message);
    }
}

// ‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
testRealSlip();